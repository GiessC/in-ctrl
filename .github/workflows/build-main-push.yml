name: Build and Test
on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  api-build:
    name: API Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8
    - name: Setup NuGet
      uses: nuget/setup-nuget@v2
    - name: Cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Restore dependencies
      run: nuget restore
      working-directory: ${{ github.workspace }}/api/
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:ContinuousIntegrationBuild=true
      working-directory: ${{ github.workspace }}/api/
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      working-directory: ${{ github.workspace }}/api/
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        name: api-unit
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ${{ github.workspace }}/api/
        fail_ci_if_error: true
        flags: api-unit
  web-build:
    name: Web Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/web/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
    - run: npm ci
      working-directory: ${{ github.workspace }}/web/
    - run: npm run build
      working-directory: ${{ github.workspace }}/web/
    - run: npm run test -- --error-on-deprecated --ci --config ${{ github.workspace }}/web/jest.config.ts --maxWorkers=1
      working-directory: ${{ github.workspace }}/web/
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: ${{ github.workspace }}/web/coverage/coverage-final.json
        flags: web-unit
        name: web-unit
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
  infra-build:
    name: Infrastructure Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: ${{ github.workspace }}/infra/package-lock.json
    - run: npm ci
      working-directory: ${{ github.workspace }}/infra/
    - run: npm run build
      working-directory: ${{ github.workspace }}/infra/
    - run: npm run test -- --error-on-deprecated --ci --config ${{ github.workspace }}/infra/jest.config.ts --maxWorkers=1
      working-directory: ${{ github.workspace }}/infra/
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      with:
        codecov_yml_path: ${{ github.workspace }}/codecov.yml
        fail_ci_if_error: true
        files: ${{ github.workspace }}/infra/coverage/coverage-final.json
        flags: infra-unit
        name: infra-unit
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
    - run: cdk synth
      working-directory: ${{ github.workspace }}/infra/
  infra-deploy:
    name: Infrastructure Deploy
    environment: Development
    runs-on: ubuntu-latest
    needs: infra-build
    steps:
    - uses: actions/checkout@v4
    - name: Setup NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    - run: npm ci
      working-directory: ${{ github.workspace }}/infra/
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        audience: sts.amazonaws.com
        aws-region: ${{ vars.DEPLOY_REGION }}
        role-to-assume: ${{ vars.DEPLOY_ROLE }}
    - name: Deploy
      run: |
        cdk deploy -c environment=dev --require-approval never
      working-directory: ${{ github.workspace }}/infra/